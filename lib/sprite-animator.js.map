{"version":3,"file":"sprite-animator.js","sourceRoot":"","sources":["../src/sprite-animator.ts"],"names":[],"mappings":"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","sourcesContent":["import { Frame, getCachedSheetId, SpriteSheet } from './sprite-sheet'\n\nexport interface SpriteAnimatorOptions {\n  imageUrl: string\n  sheet: SpriteSheet\n  animation: string\n  onAnimationEnd?: (animation: string) => void\n}\n\nfunction buildKeyframes(name: string, frames: Frame[]): string {\n  const n = frames.length\n  const steps: string[] = []\n  for (let i = 0; i < n; i++) {\n    const pct = (i / n) * 100\n    const f = frames[i]\n    const decls = [`background-position: ${-f.x}px ${-f.y}px;`]\n    steps.push(`${pct}% { ${decls.join(' ')} animation-timing-function: steps(1, end); }`)\n  }\n  //const last = frames[n - 1]\n  //const lastDecls = [`background-position: ${-last.x}px ${-last.y}px;`]\n  //steps.push(`100% { ${lastDecls.join(' ')} }`)\n  return `@keyframes ${name} {\\n${steps.join('\\n')}\\n}`\n}\n\nexport class SpriteAnimator {\n  element: HTMLElement\n\n  #sheet: SpriteSheet\n  #sheetId: string\n  #styleEl: HTMLStyleElement\n\n  constructor(options: SpriteAnimatorOptions) {\n    this.element = document.createElement('div')\n\n    const s = this.element.style\n    s.backgroundImage = `url(${options.imageUrl})`\n    s.backgroundRepeat = 'no-repeat'\n\n    this.#sheet = options.sheet\n    this.#sheetId = getCachedSheetId(options.imageUrl, options.sheet)\n\n    this.#styleEl = document.createElement('style')\n    document.head.appendChild(this.#styleEl)\n\n    for (const [animationName, animation] of Object.entries(options.sheet.animations)) {\n      const frames: Frame[] = animation.frames.map(name => options.sheet.frames[name])\n      this.#styleEl.appendChild(document.createTextNode(buildKeyframes(this.#keyframesName(animationName), frames)))\n    }\n\n    /*this.element.addEventListener('animationend', (e) => {\n      if (e.animationName === this.keyframesName(this.animationName)) {\n        this.playing = false\n        options.onAnimationEnd?.(this.animationName)\n      }\n    })*/\n\n    this.animation = options.animation\n  }\n\n  #keyframesName(animName: string) { return `${this.#sheetId}_${animName}` }\n\n  set animation(name: string) {\n    const anim = this.#sheet.animations[name]\n    const frameCount = anim.frames.length\n    const duration = Math.max(1, frameCount) / Math.max(1, anim.fps)\n    const kfName = this.#keyframesName(name)\n\n    const iterCount = anim.loop ? 'infinite' : '1'\n    const timing = `steps(${Math.max(1, frameCount)}, start)`\n\n    const s = this.element.style\n    s.animation = `${kfName} ${duration}s ${timing} 0s ${iterCount} both`\n\n    const firstFrame = this.#sheet.frames[anim.frames[0]]\n    s.width = `${firstFrame.w}px`\n    s.height = `${firstFrame.h}px`\n  }\n\n  remove() {\n    this.element.remove()\n    this.#styleEl.remove()\n  }\n}\n"]}